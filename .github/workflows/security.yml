name: Security

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
  schedule:
    # Run security scan every Monday at 10:00 UTC
    - cron: '0 10 * * 1'

jobs:
  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install dependencies
      run: poetry install --no-interaction

    - name: Run Bandit security linting
      run: |
        poetry add --group dev bandit[toml]
        poetry run bandit -r src/ -f json -o bandit-report.json
      continue-on-error: true

    - name: Run Safety vulnerability check
      run: |
        poetry add --group dev safety
        poetry run safety check --json --output safety-report.json
      continue-on-error: true

    - name: Run pip-audit for dependency vulnerabilities
      run: |
        pip install pip-audit
        pip-audit --format=json --output=pip-audit-report.json
      continue-on-error: true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
          pip-audit-report.json
