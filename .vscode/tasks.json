{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Run Yendoria",
			"type": "shell",
			"command": "poetry",
			"args": [
				"run",
				"python",
				"-m",
				"yendoria"
			],
			"group": "build",
			"isBackground": false,
			"problemMatcher": []
		},
		{
			"label": "Lint with Ruff",
			"type": "shell",
			"command": "poetry",
			"args": ["run", "ruff", "check", "."],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "Format with Ruff",
			"type": "shell",
			"command": "poetry",
			"args": ["run", "ruff", "format", "."],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "Type Check with MyPy",
			"type": "shell",
			"command": "poetry",
			"args": ["run", "mypy", "src"],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "Run All Checks",
			"type": "shell",
			"command": "poetry",
			"args": ["run", "sh", "-c", "ruff check . && ruff format --check . && mypy src"],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "Run Tests with Coverage",
			"type": "shell",
			"command": "poetry",
			"args": ["run", "pytest", "--cov=src/yendoria", "--cov-report=html", "--cov-report=term"],
			"group": "test",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "Security Scan with Bandit",
			"type": "shell",
			"command": "poetry",
			"args": ["run", "bandit", "-r", "src/"],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "Security Check with Safety",
			"type": "shell",
			"command": "poetry",
			"args": ["run", "safety", "check"],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "Full CI Check",
			"type": "shell",
			"command": "poetry",
			"args": ["run", "sh", "-c", "ruff check . && ruff format --check . && mypy && pytest --cov=src/yendoria --cov-fail-under=55 && bandit -r src/ && safety check"],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "Conventional Commit",
			"type": "shell",
			"command": "poetry",
			"args": ["run", "cz", "commit"],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "Check Current Version",
			"type": "shell",
			"command": "poetry",
			"args": ["version", "--short"],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "Preview Next Version",
			"type": "shell",
			"command": "poetry",
			"args": ["run", "semantic-release", "version", "--print"],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "Generate Changelog",
			"type": "shell",
			"command": "poetry",
			"args": ["run", "cz", "changelog"],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "Build Release Package",
			"type": "shell",
			"command": "poetry",
			"args": ["build"],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "Validate Release Setup",
			"type": "shell",
			"command": "poetry",
			"args": ["run", "sh", "-c", "echo 'üîç Checking release setup...' && poetry version --short && echo 'üìã Checking conventional commits...' && poetry run cz version --dry-run && echo 'üèóÔ∏è Testing build...' && poetry build --dry-run && echo '‚úÖ Release setup validated!'"],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		}
	]
}
